{"mappings":"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","sources":["src/index.js"],"sourcesContent":["\nconst userProfile = {\n    temperature_unit: \"fahrenheit\",\n    precipitation_unit: \"inch\",\n    wind_speed: \"kmh\"\n}\n\nfetch(\"http://localhost:3000/locations\")\n.then(response => response.json())\n.then(locations => {\n\n    locations.forEach(location => {\n        createLocationCard(location);\n    })\n})\n\nfunction createLocationCard(location) {\n\n    // Create card for location weather\n    const divTag = document.createElement(\"div\");\n    divTag.classList = \"cards\";\n\n    const h3Tag = document.createElement(\"h3\");\n    h3Tag.textContent = location.location_name;\n\n    const h1Tag = document.createElement(\"h1\");\n    h1Tag.id = location.id;\n\n    const h2Tag = document.createElement(\"h2\");\n    h2Tag.id = `current-time-${location.id}`\n\n    const removeButton = document.createElement(\"button\");\n    removeButton.textContent = \"x\"\n\n    displayLocationWeather(location);\n\n    divTag.append(h3Tag, h2Tag, h1Tag, removeButton);\n    document.querySelector(\"#my-locations\").append(divTag);\n\n    removeButton.addEventListener(\"click\", event => {\n        fetch(`http://localhost:3000/locations/${location.id}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            }\n        })\n        event.target.parentNode.remove();\n    })\n\n}\n\nfunction displayLocationWeather(location) {\n    \n    fetch(`https://api.open-meteo.com/v1/forecast?latitude=${location.latitude}&longitude=${location.longitude}&current=temperature_2m,is_day,precipitation,rain,showers,snowfall,cloud_cover,wind_speed_10m&hourly=temperature_2m,precipitation_probability,precipitation,rain,showers,snowfall,cloud_cover,cloud_cover_low,cloud_cover_mid,cloud_cover_high&temperature_unit=fahrenheit&precipitation_unit=inch&timezone=auto`)\n    .then(response => response.json())\n    .then(locationWeatherData => {\n        console.log(locationWeatherData);\n\n        document.getElementById(`${location.id}`).textContent = `${locationWeatherData.current.temperature_2m}${locationWeatherData.current_units.temperature_2m}`;\n\n        document.getElementById(`current-time-${location.id}`).textContent = `${locationWeatherData.current.time} ${locationWeatherData.timezone}`\n        createHourlyForecastTable(locationWeatherData, location);\n\n        currentWeatherCondition(locationWeatherData);\n    })\n}\n\nconst locationForm = document.querySelector(\"#location-search\");\nlocationForm.addEventListener(\"submit\", event => {\n    event.preventDefault();\n\n    const addressToSearch = document.querySelector(\"#location-bar\").value.replaceAll(\" \", \"+\");\n\n    console.log(addressToSearch);\n\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${addressToSearch}&key=AIzaSyDDGjaILsNwimx1opHCdZ_3DJgMeHd2C7s`)\n    .then(response => response.json())\n    .then(geolocation => {\n        console.log(geolocation);\n\n        let newLocation = {\n            \"location_name\": geolocation.results[0].formatted_address,\n            \"latitude\": geolocation.results[0].geometry.location.lat,\n            \"longitude\": geolocation.results[0].geometry.location.lng\n        };\n\n        fetch(\"http://localhost:3000/locations\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify(newLocation)\n        })\n        .then(response => response.json())\n        .then(newLocation => {\n    \n            createLocationCard(newLocation);\n\n        })\n    })\n\n    event.target.reset();\n})\n\nfunction createHourlyForecastTable(weatherData, location) {\n    \n    // Create table for hourly data:\n    const tableTag = document.createElement(\"table\");\n    const theadTag = document.createElement(\"thead\");\n    const trTag = document.createElement(\"tr\");\n    \n    tableTag.append(theadTag, trTag);\n\n    const slicedWeatherDataHours = weatherData.hourly.time.slice(0, 6);\n    const slicedWeatherDataTemperature = weatherData.hourly.temperature_2m.slice(0, 6);\n\n    for (let i = 0; i < slicedWeatherDataHours.length; i++) {\n\n        const tdTagHour = document.createElement(\"td\");\n        tdTagHour.textContent = slicedWeatherDataHours[i];\n        theadTag.append(tdTagHour);\n\n        const tdTagTemperature = document.createElement(\"td\");\n        tdTagTemperature.textContent = `${slicedWeatherDataTemperature[i]} ${weatherData.hourly_units.temperature_2m}`;\n        trTag.append(tdTagTemperature);\n    }\n\n    document.getElementById(`${location.id}`).parentNode.append(tableTag);\n\n}\n\nfunction currentWeatherCondition(weatherData) {\n    if (weatherData.current.is_day === 1) {\n        console.log(\"It's daytime!\")\n    } else {\n        console.log(\"It's nighttime!\")\n    };\n\n    if (weatherData.current.cloud_cover <= 30) {\n        console.log(\"Today the sky is clear!\")\n    } else if (weatherData.current.cloud_cover <= 60) {\n        console.log(\"There are a few clouds in the sky...\")\n    } else if (weatherData.current.cloud_cover <= 90) {\n        console.log(\"The sky is mostly cloudy right now...\")\n    } else { \n        console.log(\"Completely overcast\")\n    };\n\n    if (weatherData.current.rain === 0) {\n        console.log(\"No rain\")\n    } else if (weatherData.current.rain <= 0.5) {\n        console.log(\"Light rain\")\n    } else if (weatherData.current.rain <= 4.0) {\n        console.log(\"Moderate rain\")\n    } else {\n        console.log(\"Heavy Rain\")\n    };\n\n    if (weatherData.current.snowfall === 0) {\n        console.log(\"It is not snowing\")\n    } else if (weatherData.current.snowfall <= 0.5) {\n        console.log(\"Light snow\")\n    } else if (weatherData.current.snowfall <= 4.0) {\n        console.log(\"Moderate snow\")\n    } else {\n        console.log(\"Heavy snow\")\n    };\n}\n"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}